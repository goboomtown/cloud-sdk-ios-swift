//
// ReportsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class ReportsAPI: APIBase {
    /**
     Key Performance Indicator Support Minutes By Category
     - parameter startDate: (query) The report start date (optional)
     - parameter endDate: (query) The report end date (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getReportActiveSupportMinutes(startDate: String? = nil, endDate: String? = nil, completion: @escaping ((_ data: ReportingKPIActiveSupportMinutesResponse?, _ error: ErrorResponse?) -> Void)) {
        getReportActiveSupportMinutesWithRequestBuilder(startDate: startDate, endDate: endDate).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Key Performance Indicator Support Minutes By Category
     - GET /reports/kpi_active_support_minutes
     - App and phone support minutes by category
     - API Key:
       - type: apiKey X-Boomtown-Date 
       - name: X-Boomtown-Date     - API Key:
       - type: apiKey X-Boomtown-Signature 
       - name: X-Boomtown-Signature     - API Key:
       - type: apiKey X-Boomtown-Token 
       - name: X-Boomtown-Token
     - examples: [{contentType=application/json, example=""}]
     - parameter startDate: (query) The report start date (optional)
     - parameter endDate: (query) The report end date (optional)
     - returns: RequestBuilder<ReportingKPIActiveSupportMinutesResponse> 
     */
    open class func getReportActiveSupportMinutesWithRequestBuilder(startDate: String? = nil, endDate: String? = nil) -> RequestBuilder<ReportingKPIActiveSupportMinutesResponse> {
        let path = "/reports/kpi_active_support_minutes"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "start_date": startDate,
            "end_date": endDate
        ])

        let requestBuilder: RequestBuilder<ReportingKPIActiveSupportMinutesResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Key Performance Indicator Average Time To Scheduled
     - parameter startDate: (query) The report start date (optional)
     - parameter endDate: (query) The report end date (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getReportAverageTimeToScheduled(startDate: String? = nil, endDate: String? = nil, completion: @escaping ((_ data: ReportingKPIAverageTimeToScheduledResponse?, _ error: ErrorResponse?) -> Void)) {
        getReportAverageTimeToScheduledWithRequestBuilder(startDate: startDate, endDate: endDate).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Key Performance Indicator Average Time To Scheduled
     - GET /reports/kpi_average_time_to_scheduled
     - Returns the average of the difference (in days) of the onsite support scheduled date from the issue creation date
     - API Key:
       - type: apiKey X-Boomtown-Date 
       - name: X-Boomtown-Date     - API Key:
       - type: apiKey X-Boomtown-Signature 
       - name: X-Boomtown-Signature     - API Key:
       - type: apiKey X-Boomtown-Token 
       - name: X-Boomtown-Token
     - examples: [{contentType=application/json, example=""}]
     - parameter startDate: (query) The report start date (optional)
     - parameter endDate: (query) The report end date (optional)
     - returns: RequestBuilder<ReportingKPIAverageTimeToScheduledResponse> 
     */
    open class func getReportAverageTimeToScheduledWithRequestBuilder(startDate: String? = nil, endDate: String? = nil) -> RequestBuilder<ReportingKPIAverageTimeToScheduledResponse> {
        let path = "/reports/kpi_average_time_to_scheduled"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "start_date": startDate,
            "end_date": endDate
        ])

        let requestBuilder: RequestBuilder<ReportingKPIAverageTimeToScheduledResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Key Performance Indicator Issues By Age
     - parameter startDate: (query) The report start date (optional)
     - parameter endDate: (query) The report end date (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getReportIssuesByAge(startDate: String? = nil, endDate: String? = nil, completion: @escaping ((_ data: ReportingKPIIssuesByAgeResponse?, _ error: ErrorResponse?) -> Void)) {
        getReportIssuesByAgeWithRequestBuilder(startDate: startDate, endDate: endDate).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Key Performance Indicator Issues By Age
     - GET /reports/kpi_issues_by_age
     - Count of issues by static date ranges
     - API Key:
       - type: apiKey X-Boomtown-Date 
       - name: X-Boomtown-Date     - API Key:
       - type: apiKey X-Boomtown-Signature 
       - name: X-Boomtown-Signature     - API Key:
       - type: apiKey X-Boomtown-Token 
       - name: X-Boomtown-Token
     - examples: [{contentType=application/json, example=""}]
     - parameter startDate: (query) The report start date (optional)
     - parameter endDate: (query) The report end date (optional)
     - returns: RequestBuilder<ReportingKPIIssuesByAgeResponse> 
     */
    open class func getReportIssuesByAgeWithRequestBuilder(startDate: String? = nil, endDate: String? = nil) -> RequestBuilder<ReportingKPIIssuesByAgeResponse> {
        let path = "/reports/kpi_issues_by_age"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "start_date": startDate,
            "end_date": endDate
        ])

        let requestBuilder: RequestBuilder<ReportingKPIIssuesByAgeResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Key Performance Indicator Issues By Category
     - parameter startDate: (query) The report start date (optional)
     - parameter endDate: (query) The report end date (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getReportIssuesByCategory(startDate: String? = nil, endDate: String? = nil, completion: @escaping ((_ data: ReportingKPIIssuesByCategoryResponse?, _ error: ErrorResponse?) -> Void)) {
        getReportIssuesByCategoryWithRequestBuilder(startDate: startDate, endDate: endDate).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Key Performance Indicator Issues By Category
     - GET /reports/kpi_issues_by_category
     - Count of issues by category
     - API Key:
       - type: apiKey X-Boomtown-Date 
       - name: X-Boomtown-Date     - API Key:
       - type: apiKey X-Boomtown-Signature 
       - name: X-Boomtown-Signature     - API Key:
       - type: apiKey X-Boomtown-Token 
       - name: X-Boomtown-Token
     - examples: [{contentType=application/json, example=""}]
     - parameter startDate: (query) The report start date (optional)
     - parameter endDate: (query) The report end date (optional)
     - returns: RequestBuilder<ReportingKPIIssuesByCategoryResponse> 
     */
    open class func getReportIssuesByCategoryWithRequestBuilder(startDate: String? = nil, endDate: String? = nil) -> RequestBuilder<ReportingKPIIssuesByCategoryResponse> {
        let path = "/reports/kpi_issues_by_category"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "start_date": startDate,
            "end_date": endDate
        ])

        let requestBuilder: RequestBuilder<ReportingKPIIssuesByCategoryResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Key Performance Indicator Issues By Geography
     - parameter startDate: (query) The report start date (optional)
     - parameter endDate: (query) The report end date (optional)
     - parameter division: (query) Geographic boundary type (null &#x3D; state|country|zipcode) (optional)
     - parameter issueType: (query) Issue type (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getReportIssuesByGeography(startDate: String? = nil, endDate: String? = nil, division: String? = nil, issueType: Int32? = nil, completion: @escaping ((_ data: ReportingKPIIssuesByGeographyResponse?, _ error: ErrorResponse?) -> Void)) {
        getReportIssuesByGeographyWithRequestBuilder(startDate: startDate, endDate: endDate, division: division, issueType: issueType).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Key Performance Indicator Issues By Geography
     - GET /reports/kpi_issues_by_geography
     - Returns a count of issues separated by geographic boundaries
     - API Key:
       - type: apiKey X-Boomtown-Date 
       - name: X-Boomtown-Date     - API Key:
       - type: apiKey X-Boomtown-Signature 
       - name: X-Boomtown-Signature     - API Key:
       - type: apiKey X-Boomtown-Token 
       - name: X-Boomtown-Token
     - examples: [{contentType=application/json, example=""}]
     - parameter startDate: (query) The report start date (optional)
     - parameter endDate: (query) The report end date (optional)
     - parameter division: (query) Geographic boundary type (null &#x3D; state|country|zipcode) (optional)
     - parameter issueType: (query) Issue type (optional)
     - returns: RequestBuilder<ReportingKPIIssuesByGeographyResponse> 
     */
    open class func getReportIssuesByGeographyWithRequestBuilder(startDate: String? = nil, endDate: String? = nil, division: String? = nil, issueType: Int32? = nil) -> RequestBuilder<ReportingKPIIssuesByGeographyResponse> {
        let path = "/reports/kpi_issues_by_geography"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "start_date": startDate,
            "end_date": endDate,
            "division": division,
            "issue_type": issueType?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<ReportingKPIIssuesByGeographyResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Key Performance Indicator Issues By Location
     - parameter startDate: (query) The report start date (optional)
     - parameter endDate: (query) The report end date (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getReportIssuesByLocation(startDate: String? = nil, endDate: String? = nil, completion: @escaping ((_ data: ReportingKPIIssuesByLocationResponse?, _ error: ErrorResponse?) -> Void)) {
        getReportIssuesByLocationWithRequestBuilder(startDate: startDate, endDate: endDate).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Key Performance Indicator Issues By Location
     - GET /reports/kpi_issues_by_location
     - Counts of issues by location
     - API Key:
       - type: apiKey X-Boomtown-Date 
       - name: X-Boomtown-Date     - API Key:
       - type: apiKey X-Boomtown-Signature 
       - name: X-Boomtown-Signature     - API Key:
       - type: apiKey X-Boomtown-Token 
       - name: X-Boomtown-Token
     - examples: [{contentType=application/json, example=""}]
     - parameter startDate: (query) The report start date (optional)
     - parameter endDate: (query) The report end date (optional)
     - returns: RequestBuilder<ReportingKPIIssuesByLocationResponse> 
     */
    open class func getReportIssuesByLocationWithRequestBuilder(startDate: String? = nil, endDate: String? = nil) -> RequestBuilder<ReportingKPIIssuesByLocationResponse> {
        let path = "/reports/kpi_issues_by_location"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "start_date": startDate,
            "end_date": endDate
        ])

        let requestBuilder: RequestBuilder<ReportingKPIIssuesByLocationResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Key Performance Issues Over Time
     - parameter startDate: (query) The report start date (optional)
     - parameter endDate: (query) The report end date (optional)
     - parameter interval: (query) Interval for aggregate (null &#x3D; week|month|day) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getReportIssuesOverTime(startDate: String? = nil, endDate: String? = nil, interval: String? = nil, completion: @escaping ((_ data: ReportingKPIIssuesOverTimeResponse?, _ error: ErrorResponse?) -> Void)) {
        getReportIssuesOverTimeWithRequestBuilder(startDate: startDate, endDate: endDate, interval: interval).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Key Performance Issues Over Time
     - GET /reports/kpi_issues_over_time
     - Count of issues over an interval period
     - API Key:
       - type: apiKey X-Boomtown-Date 
       - name: X-Boomtown-Date     - API Key:
       - type: apiKey X-Boomtown-Signature 
       - name: X-Boomtown-Signature     - API Key:
       - type: apiKey X-Boomtown-Token 
       - name: X-Boomtown-Token
     - examples: [{contentType=application/json, example=""}]
     - parameter startDate: (query) The report start date (optional)
     - parameter endDate: (query) The report end date (optional)
     - parameter interval: (query) Interval for aggregate (null &#x3D; week|month|day) (optional)
     - returns: RequestBuilder<ReportingKPIIssuesOverTimeResponse> 
     */
    open class func getReportIssuesOverTimeWithRequestBuilder(startDate: String? = nil, endDate: String? = nil, interval: String? = nil) -> RequestBuilder<ReportingKPIIssuesOverTimeResponse> {
        let path = "/reports/kpi_issues_over_time"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "start_date": startDate,
            "end_date": endDate,
            "interval": interval
        ])

        let requestBuilder: RequestBuilder<ReportingKPIIssuesOverTimeResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Key Performance Indicator Issues Remote vs Onsite
     - parameter startDate: (query) The report start date (optional)
     - parameter endDate: (query) The report end date (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getReportIssuesRemoteVsOnsite(startDate: String? = nil, endDate: String? = nil, completion: @escaping ((_ data: ReportingKPIIssuesRemoteVsOnsiteResponse?, _ error: ErrorResponse?) -> Void)) {
        getReportIssuesRemoteVsOnsiteWithRequestBuilder(startDate: startDate, endDate: endDate).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Key Performance Indicator Issues Remote vs Onsite
     - GET /reports/kpi_issues_remote_vs_onsite
     - Counts & Percentages of remote and onsite issues
     - API Key:
       - type: apiKey X-Boomtown-Date 
       - name: X-Boomtown-Date     - API Key:
       - type: apiKey X-Boomtown-Signature 
       - name: X-Boomtown-Signature     - API Key:
       - type: apiKey X-Boomtown-Token 
       - name: X-Boomtown-Token
     - examples: [{contentType=application/json, example=""}]
     - parameter startDate: (query) The report start date (optional)
     - parameter endDate: (query) The report end date (optional)
     - returns: RequestBuilder<ReportingKPIIssuesRemoteVsOnsiteResponse> 
     */
    open class func getReportIssuesRemoteVsOnsiteWithRequestBuilder(startDate: String? = nil, endDate: String? = nil) -> RequestBuilder<ReportingKPIIssuesRemoteVsOnsiteResponse> {
        let path = "/reports/kpi_issues_remote_vs_onsite"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "start_date": startDate,
            "end_date": endDate
        ])

        let requestBuilder: RequestBuilder<ReportingKPIIssuesRemoteVsOnsiteResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Key Performance Indicator Issue Time To Completion
     - parameter startDate: (query) The report start date (optional)
     - parameter endDate: (query) The report end date (optional)
     - parameter issueType: (query) Issue Type (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getReportIssuesTimeToCompletion(startDate: String? = nil, endDate: String? = nil, issueType: String? = nil, completion: @escaping ((_ data: ReportingKPIIssuesTimeToCompletionResponse?, _ error: ErrorResponse?) -> Void)) {
        getReportIssuesTimeToCompletionWithRequestBuilder(startDate: startDate, endDate: endDate, issueType: issueType).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Key Performance Indicator Issue Time To Completion
     - GET /reports/kpi_issues_time_to_completion
     - Average time difference between issue resolution and creation
     - API Key:
       - type: apiKey X-Boomtown-Date 
       - name: X-Boomtown-Date     - API Key:
       - type: apiKey X-Boomtown-Signature 
       - name: X-Boomtown-Signature     - API Key:
       - type: apiKey X-Boomtown-Token 
       - name: X-Boomtown-Token
     - examples: [{contentType=application/json, example=""}]
     - parameter startDate: (query) The report start date (optional)
     - parameter endDate: (query) The report end date (optional)
     - parameter issueType: (query) Issue Type (optional)
     - returns: RequestBuilder<ReportingKPIIssuesTimeToCompletionResponse> 
     */
    open class func getReportIssuesTimeToCompletionWithRequestBuilder(startDate: String? = nil, endDate: String? = nil, issueType: String? = nil) -> RequestBuilder<ReportingKPIIssuesTimeToCompletionResponse> {
        let path = "/reports/kpi_issues_time_to_completion"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "start_date": startDate,
            "end_date": endDate,
            "issue_type": issueType
        ])

        let requestBuilder: RequestBuilder<ReportingKPIIssuesTimeToCompletionResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Key Performance Indicator Open Issues
     - parameter startDate: (query) The report start date (optional)
     - parameter endDate: (query) The report end date (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getReportOpenIssues(startDate: String? = nil, endDate: String? = nil, completion: @escaping ((_ data: ReportingKPIOpenIssuesResponse?, _ error: ErrorResponse?) -> Void)) {
        getReportOpenIssuesWithRequestBuilder(startDate: startDate, endDate: endDate).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Key Performance Indicator Open Issues
     - GET /reports/kpi_open_issues
     - List of open issues
     - API Key:
       - type: apiKey X-Boomtown-Date 
       - name: X-Boomtown-Date     - API Key:
       - type: apiKey X-Boomtown-Signature 
       - name: X-Boomtown-Signature     - API Key:
       - type: apiKey X-Boomtown-Token 
       - name: X-Boomtown-Token
     - examples: [{contentType=application/json, example=""}]
     - parameter startDate: (query) The report start date (optional)
     - parameter endDate: (query) The report end date (optional)
     - returns: RequestBuilder<ReportingKPIOpenIssuesResponse> 
     */
    open class func getReportOpenIssuesWithRequestBuilder(startDate: String? = nil, endDate: String? = nil) -> RequestBuilder<ReportingKPIOpenIssuesResponse> {
        let path = "/reports/kpi_open_issues"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "start_date": startDate,
            "end_date": endDate
        ])

        let requestBuilder: RequestBuilder<ReportingKPIOpenIssuesResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Key Performance Indicator Org Owned Issues
     - parameter startDate: (query) The report start date (optional)
     - parameter endDate: (query) The report end date (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getReportOrgOwnedIssues(startDate: String? = nil, endDate: String? = nil, completion: @escaping ((_ data: ReportingKPIOrgOwnedIssuesResponse?, _ error: ErrorResponse?) -> Void)) {
        getReportOrgOwnedIssuesWithRequestBuilder(startDate: startDate, endDate: endDate).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Key Performance Indicator Org Owned Issues
     - GET /reports/kpi_parner_owned_issues
     - Counts of work order and support type issues
     - API Key:
       - type: apiKey X-Boomtown-Date 
       - name: X-Boomtown-Date     - API Key:
       - type: apiKey X-Boomtown-Signature 
       - name: X-Boomtown-Signature     - API Key:
       - type: apiKey X-Boomtown-Token 
       - name: X-Boomtown-Token
     - examples: [{contentType=application/json, example=""}]
     - parameter startDate: (query) The report start date (optional)
     - parameter endDate: (query) The report end date (optional)
     - returns: RequestBuilder<ReportingKPIOrgOwnedIssuesResponse> 
     */
    open class func getReportOrgOwnedIssuesWithRequestBuilder(startDate: String? = nil, endDate: String? = nil) -> RequestBuilder<ReportingKPIOrgOwnedIssuesResponse> {
        let path = "/reports/kpi_parner_owned_issues"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "start_date": startDate,
            "end_date": endDate
        ])

        let requestBuilder: RequestBuilder<ReportingKPIOrgOwnedIssuesResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get an Org Report
     - parameter startDate: (query) The report start date 
     - parameter endDate: (query) The report end date 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getReportOrgs(startDate: String, endDate: String, completion: @escaping ((_ data: ReportingOrgsResponse?, _ error: ErrorResponse?) -> Void)) {
        getReportOrgsWithRequestBuilder(startDate: startDate, endDate: endDate).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get an Org Report
     - GET /reports/orgs
     - Returns a collection of *OrgReportItem* reporting objects with header information.
     - API Key:
       - type: apiKey X-Boomtown-Date 
       - name: X-Boomtown-Date     - API Key:
       - type: apiKey X-Boomtown-Signature 
       - name: X-Boomtown-Signature     - API Key:
       - type: apiKey X-Boomtown-Token 
       - name: X-Boomtown-Token
     - examples: [{contentType=application/json, example=""}]
     - parameter startDate: (query) The report start date 
     - parameter endDate: (query) The report end date 
     - returns: RequestBuilder<ReportingOrgsResponse> 
     */
    open class func getReportOrgsWithRequestBuilder(startDate: String, endDate: String) -> RequestBuilder<ReportingOrgsResponse> {
        let path = "/reports/orgs"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "start_date": startDate,
            "end_date": endDate
        ])

        let requestBuilder: RequestBuilder<ReportingOrgsResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get a Technician Report
     - parameter startDate: (query) The report start date (optional)
     - parameter endDate: (query) The report end date (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getReportTechnicians(startDate: String? = nil, endDate: String? = nil, completion: @escaping ((_ data: ReportingTechniciansResponse?, _ error: ErrorResponse?) -> Void)) {
        getReportTechniciansWithRequestBuilder(startDate: startDate, endDate: endDate).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get a Technician Report
     - GET /reports/technicians
     - Returns a collection of *TechnicianReportItem* reporting objects with header information.
     - API Key:
       - type: apiKey X-Boomtown-Date 
       - name: X-Boomtown-Date     - API Key:
       - type: apiKey X-Boomtown-Signature 
       - name: X-Boomtown-Signature     - API Key:
       - type: apiKey X-Boomtown-Token 
       - name: X-Boomtown-Token
     - examples: [{contentType=application/json, example=""}]
     - parameter startDate: (query) The report start date (optional)
     - parameter endDate: (query) The report end date (optional)
     - returns: RequestBuilder<ReportingTechniciansResponse> 
     */
    open class func getReportTechniciansWithRequestBuilder(startDate: String? = nil, endDate: String? = nil) -> RequestBuilder<ReportingTechniciansResponse> {
        let path = "/reports/technicians"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "start_date": startDate,
            "end_date": endDate
        ])

        let requestBuilder: RequestBuilder<ReportingTechniciansResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Key Performance Indicator Time Onsite By Location
     - parameter startDate: (query) The report start date (optional)
     - parameter endDate: (query) The report end date (optional)
     - parameter interval: (query) null &#x3D; hour|minute|second (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getReportTimeOnsiteByLocation(startDate: String? = nil, endDate: String? = nil, interval: String? = nil, completion: @escaping ((_ data: ReportingKPITimeOnsiteByLocationResponse?, _ error: ErrorResponse?) -> Void)) {
        getReportTimeOnsiteByLocationWithRequestBuilder(startDate: startDate, endDate: endDate, interval: interval).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Key Performance Indicator Time Onsite By Location
     - GET /reports/kpi_time_onsite_by_location
     - Counts of time onsite by location
     - API Key:
       - type: apiKey X-Boomtown-Date 
       - name: X-Boomtown-Date     - API Key:
       - type: apiKey X-Boomtown-Signature 
       - name: X-Boomtown-Signature     - API Key:
       - type: apiKey X-Boomtown-Token 
       - name: X-Boomtown-Token
     - examples: [{contentType=application/json, example=""}]
     - parameter startDate: (query) The report start date (optional)
     - parameter endDate: (query) The report end date (optional)
     - parameter interval: (query) null &#x3D; hour|minute|second (optional)
     - returns: RequestBuilder<ReportingKPITimeOnsiteByLocationResponse> 
     */
    open class func getReportTimeOnsiteByLocationWithRequestBuilder(startDate: String? = nil, endDate: String? = nil, interval: String? = nil) -> RequestBuilder<ReportingKPITimeOnsiteByLocationResponse> {
        let path = "/reports/kpi_time_onsite_by_location"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "start_date": startDate,
            "end_date": endDate,
            "interval": interval
        ])

        let requestBuilder: RequestBuilder<ReportingKPITimeOnsiteByLocationResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
