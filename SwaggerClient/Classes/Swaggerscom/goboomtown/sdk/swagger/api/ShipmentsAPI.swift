//
// ShipmentsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class ShipmentsAPI: APIBase {
    /**
     Create a Shipment for a Customer
     - parameter shipments: (body) The *Shipment* to create (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createShipment(shipments: ShipmentCreateRequest? = nil, completion: @escaping ((_ data: ShipmentResponse?, _ error: ErrorResponse?) -> Void)) {
        createShipmentWithRequestBuilder(shipments: shipments).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Create a Shipment for a Customer
     - POST /shipments/put
     - Creates a *Shipment* object
     - API Key:
       - type: apiKey X-Boomtown-Date 
       - name: X-Boomtown-Date     - API Key:
       - type: apiKey X-Boomtown-Signature 
       - name: X-Boomtown-Signature     - API Key:
       - type: apiKey X-Boomtown-Token 
       - name: X-Boomtown-Token
     - examples: [{contentType=application/json, example=""}]
     - parameter shipments: (body) The *Shipment* to create (optional)
     - returns: RequestBuilder<ShipmentResponse> 
     */
    open class func createShipmentWithRequestBuilder(shipments: ShipmentCreateRequest? = nil) -> RequestBuilder<ShipmentResponse> {
        let path = "/shipments/put"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = shipments?.encodeToJSON()

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<ShipmentResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Get a Shipment
     - parameter shipmentId: (path) The primary key of the *Shipment* 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getShipment(shipmentId: String, completion: @escaping ((_ data: ShipmentResponse?, _ error: ErrorResponse?) -> Void)) {
        getShipmentWithRequestBuilder(shipmentId: shipmentId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get a Shipment
     - GET /shipments/get/{shipment_id}
     - Returns an *Shipment* object.
     - API Key:
       - type: apiKey X-Boomtown-Date 
       - name: X-Boomtown-Date     - API Key:
       - type: apiKey X-Boomtown-Signature 
       - name: X-Boomtown-Signature     - API Key:
       - type: apiKey X-Boomtown-Token 
       - name: X-Boomtown-Token
     - examples: [{contentType=application/json, example=""}]
     - parameter shipmentId: (path) The primary key of the *Shipment* 
     - returns: RequestBuilder<ShipmentResponse> 
     */
    open class func getShipmentWithRequestBuilder(shipmentId: String) -> RequestBuilder<ShipmentResponse> {
        var path = "/shipments/get/{shipment_id}"
        let shipmentIdPreEscape = "\(shipmentId)"
        let shipmentIdPostEscape = shipmentIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{shipment_id}", with: shipmentIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<ShipmentResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get 'Carrier' dictionary for mapping keys to labels
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getShipmentMetaCarriers(completion: @escaping ((_ data: EnumerationItemResponse?, _ error: ErrorResponse?) -> Void)) {
        getShipmentMetaCarriersWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get 'Carrier' dictionary for mapping keys to labels
     - GET /shipments/meta/carriers
     - Returns a dictionary for mapping 'Carrier' keys to labels on *Shipment* objects.
     - API Key:
       - type: apiKey X-Boomtown-Date 
       - name: X-Boomtown-Date     - API Key:
       - type: apiKey X-Boomtown-Signature 
       - name: X-Boomtown-Signature     - API Key:
       - type: apiKey X-Boomtown-Token 
       - name: X-Boomtown-Token
     - examples: [{contentType=application/json, example=""}]
     - returns: RequestBuilder<EnumerationItemResponse> 
     */
    open class func getShipmentMetaCarriersWithRequestBuilder() -> RequestBuilder<EnumerationItemResponse> {
        let path = "/shipments/meta/carriers"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<EnumerationItemResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get 'Status' dictionary for mapping keys to labels
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getShipmentMetaStatuses(completion: @escaping ((_ data: EnumerationItemResponse?, _ error: ErrorResponse?) -> Void)) {
        getShipmentMetaStatusesWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get 'Status' dictionary for mapping keys to labels
     - GET /shipments/meta/statuses
     - Returns a dictionary for mapping 'Status' keys to labels on *Shipment* objects. 
     - API Key:
       - type: apiKey X-Boomtown-Date 
       - name: X-Boomtown-Date     - API Key:
       - type: apiKey X-Boomtown-Signature 
       - name: X-Boomtown-Signature     - API Key:
       - type: apiKey X-Boomtown-Token 
       - name: X-Boomtown-Token
     - examples: [{contentType=application/json, example=""}]
     - returns: RequestBuilder<EnumerationItemResponse> 
     */
    open class func getShipmentMetaStatusesWithRequestBuilder() -> RequestBuilder<EnumerationItemResponse> {
        let path = "/shipments/meta/statuses"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<EnumerationItemResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get a collection of Shipments
     - parameter limit: (query) Pagination result limit (defaults to 10) (optional)
     - parameter start: (query) Pagination starting result number (defaults to 0) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getShipments(limit: Int32? = nil, start: Int32? = nil, completion: @escaping ((_ data: ShipmentResponse?, _ error: ErrorResponse?) -> Void)) {
        getShipmentsWithRequestBuilder(limit: limit, start: start).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get a collection of Shipments
     - GET /shipments/get
     - Returns a paginated collection of *Shipment* objects.
     - API Key:
       - type: apiKey X-Boomtown-Date 
       - name: X-Boomtown-Date     - API Key:
       - type: apiKey X-Boomtown-Signature 
       - name: X-Boomtown-Signature     - API Key:
       - type: apiKey X-Boomtown-Token 
       - name: X-Boomtown-Token
     - examples: [{contentType=application/json, example=""}]
     - parameter limit: (query) Pagination result limit (defaults to 10) (optional)
     - parameter start: (query) Pagination starting result number (defaults to 0) (optional)
     - returns: RequestBuilder<ShipmentResponse> 
     */
    open class func getShipmentsWithRequestBuilder(limit: Int32? = nil, start: Int32? = nil) -> RequestBuilder<ShipmentResponse> {
        let path = "/shipments/get"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "limit": limit?.encodeToJSON(),
            "start": start?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<ShipmentResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
